# Set default editor
export VISUAL=vim
export EDITOR="$VISUAL"

# GoNoodle Rack setup
export RACK_ENV="development"

# Do not record commands beginning with a space
setopt hist_ignore_space

# Source plugins
source ~/.dotfiles/zsh/completion/tmuxinator.zsh
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh

# Setup pure prompt https://git.io/6LHDOw
fpath+=("$(brew --prefix)/share/zsh/site-functions")
autoload -U promptinit; promptinit
prompt pure

# Set up zmv
autoload -U zmv

# Case insensitive auto-complete
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}'

# Bind up and down keys to history-search
bindkey '^[[A' history-beginning-search-backward
bindkey '^[[B' history-beginning-search-forward

# Bind search forward
bindkey "^U" history-incremental-search-forward

# Set term colors and italics
export TERM="xterm-256color-italic"

# Set Android SDK for React Native development
export ANDROID_HOME=$HOME/Library/Android/sdk
export PATH=$PATH:$ANDROID_HOME/emulator
export PATH=$PATH:$ANDROID_HOME/cmdline-tools/latest/bin # https://askubuntu.com/a/1388761
export PATH=$PATH:$ANDROID_HOME/tools
export PATH=$PATH:$ANDROID_HOME/tools/bin
export PATH=$PATH:$ANDROID_HOME/platform-tools

# Set JAVA_HOME as required by appium-doctor
# export JAVA_HOME=$(/usr/libexec/java_home)
# Set JAVA_HOME to Android Studio install location, ideally avoid this and use Homebrew install above.
export JAVA_HOME=/Applications/Android\ Studio.app/Contents/jbr/Contents/Home
export PATH=$PATH:$JAVA_HOME

# Set up Fastlane CLI
export PATH="$HOME/.fastlane/bin:$PATH"

# Set up macOS Font Tools CLI
export PATH="/Library/Apple/usr/bin/:$PATH"

if [ -e tokens.sh ]
then
	source "./tokens.sh"
fi

# Automatically added by tooling, not sure what
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# pnpm
export PNPM_HOME="/Users/davidcalhoun/Library/pnpm"
export PATH="$PNPM_HOME:$PATH"
# pnpm end

# Workaround for `wp-calypso` errors during `yarn install`
export PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true
export PUPPETEER_EXECUTABLE_PATH=`which chromium`

# Configure asdf-vm nodejs plugin to resolve partial versions to latest installed version
# https://github.com/asdf-vm/asdf-nodejs/blob/c5b7c40ea9ffc3470f44b6cf04a21e45dd6f81de/README.md#partial-and-codename-versions
export ASDF_NODEJS_LEGACY_FILE_DYNAMIC_STRATEGY=latest_installed

# Set GOROOT via asdf-golang
if [ -f ~/.asdf/plugins/golang/set-env.zsh ]; then
	source ~/.asdf/plugins/golang/set-env.zsh
fi

# Enable go.mod versioning
export ASDF_GOLANG_MOD_VERSION_ENABLED=true

# Include Flashlight CLI
export PATH="/Users/davidcalhoun/.flashlight/bin:$PATH"

# Include Maestro CLI
export PATH=$PATH:$HOME/.maestro/bin

# Rust + Cargo configuration
if [ -f "$HOME/.cargo/env" ]; then
	. "$HOME/.cargo/env"
fi
