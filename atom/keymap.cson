# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# '.atom-workspace':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#

'atom-text-editor.vim-mode:not(.insert-mode)':
  # Split panes
  'ctrl-w s': 'pane:split-right'
  'ctrl-w i': 'pane:split-down'

  # Move panes
  'ctrl-w H': 'window:move-active-item-to-pane-on-left'
  'ctrl-w L': 'window:move-active-item-to-pane-on-right'
  'ctrl-w J': 'window:move-active-item-to-pane-above'
  'ctrl-w K': 'window:move-active-item-to-pane-below'

'atom-text-editor.vim-mode-plus:not(.insert-mode)':
  # Split panes
  'ctrl-w s': 'pane:split-right'
  'ctrl-w i': 'pane:split-down'

  # Move panes
  'ctrl-w H': 'window:move-active-item-to-pane-on-left'
  'ctrl-w L': 'window:move-active-item-to-pane-on-right'
  'ctrl-w J': 'window:move-active-item-to-pane-above'
  'ctrl-w K': 'window:move-active-item-to-pane-below'

'atom-text-editor.vim-mode-plus.normal-mode':
  ':': 'vim-mode-plus-ex-mode:open'
  '!': 'vim-mode-plus-ex-mode:toggle-setting'

  # surround: ys
  'S': 'vim-mode-plus:surround-smart-word'
  's': 'vim-mode-plus:surround'
  's d': 'vim-mode-plus:delete-surround-any-pair'
  's c': 'vim-mode-plus:change-surround-any-pair'
  's w': 'vim-mode-plus:surround-word'
  's m': 'vim-mode-plus:map-surround'

'atom-text-editor[mini]':
  'ctrl-u': 'editor:delete-to-beginning-of-line'
  'ctrl-w': 'editor:delete-to-beginning-of-word'
